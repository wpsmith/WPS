<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package WPS\Widgets
 * @author  Travis Smith <t@wpsmith.net>
 * @license GPL-2.0+
 * @link    http://wpsmith.net
 */

namespace WPS\Widgets;

/**
 * WPS Featured "abstract" widget class.
 *
 * @package WPS\Widgets
 */
abstract class WP_Widget extends \WP_Widget {

	/**
	 * Holds widget settings defaults, populated in constructor.
	 *
	 * @var array
	 */
	protected $defaults;

	/**
	 * Constructor. Set the default widget options and create widget.
	 *
	 *
	 * @param string $id_base         Optional Base ID for the widget, lowercase and unique. If left empty,
	 *                                a portion of the widget's class name will be used Has to be unique.
	 * @param string $name            Name for the widget displayed on the configuration page.
	 * @param array  $widget_options  Optional. Widget options. See wp_register_sidebar_widget() for information
	 *                                on accepted arguments. Default empty array.
	 * @param array  $control_options Optional. Widget control options. See wp_register_widget_control() for
	 *                                information on accepted arguments. Default empty array.
	 */
	public function __construct( $id_base, $name, $widget_options = array(), $control_options = array() ) {

		add_action( 'admin_print_footer_scripts', array( __CLASS__, 'admin_footer_script' ) );

		$this->defaults = $this->get_defaults();

		parent::__construct( $id_base, $name, $widget_options, $control_options );

	}

	abstract protected function get_defaults();

	/**
	 * Outputs an inline admin script.
	 */
	public static function admin_footer_script() {
		if ( ! self::is_widgets_page() ) {
			return;
		}
		?>
        <script type="text/javascript">(function($) {if(typeof wpsWidgetSave !== 'function'){window.wpsWidgetSave = function (t) {wpWidgets.save($(t).closest('div.widget'), 0, 1, 0);}}})(jQuery);</script>
		<?php
	}

	/**
	 * Whether current admin page is the widgets page.
	 */
	public static function is_widgets_page() {
		if ( ! is_admin() ) {
			return false;
		}

		$screen = get_current_screen();
		if ( 'widgets' != $screen->base && 'widgets' != $screen->id ) {
			return false;
		}

		return true;
	}

}
